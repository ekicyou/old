-- シーケンス値取得
DROP TABLE SEQUENCE_TABLE;
CREATE TABLE SEQUENCE_TABLE (
  NAME        VARCHAR(32) NOT NULL,
  NEXT_SEQ    INT         NOT NULL,
  START_SEQ   INT         NOT NULL,
  END_SEQ     INT         NOT NULL,
  CONSTRAINT PK_SEQUENCE_TABLE PRIMARY KEY(NAME)
);

-- ボトルログ
DROP TABLE BOTTLE_LOG;
CREATE TABLE BOTTLE_LOG(
  MID         VARCHAR(32)       NOT NULL,
  LOGDATE     TIMESTAMP         NOT NULL,
  CHANNEL     VARCHAR(64)       NOT NULL,
  GHOST       VARCHAR(127)      NOT NULL,
  GHOST_CLASS VARCHAR(127)      NOT NULL,
  SENDS       SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  VOTES       SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  AGREES      SMALLINT UNSIGNED NOT NULL DEFAULT 0,
  SCRIPT      TEXT              NOT NULL,
  PRIMARY KEY(MID),
  INDEX BOTTLE_LOG_LOGDATE      (LOGDATE),
  INDEX BOTTLE_LOG_CHANNEL      (CHANNEL),
  INDEX BOTTLE_LOG_GHOST        (GHOST),
  INDEX BOTTLE_LOG_GHOST_CLASS  (GHOST_CLASS),
  INDEX BOTTLE_LOG_VOTES        (VOTES),
  INDEX BOTTLE_LOG_AGREES       (AGREES)
);

-- ボトルゴースト名エリアス
DROP TABLE BOTTLE_GHOST_CLASS;
CREATE TABLE BOTTLE_GHOST_CLASS(
  GHOST_OR_CHANNEL	VARCHAR(127)      NOT NULL,
  GHOST_CLASS 			VARCHAR(127)      NOT NULL,
  PRIMARY KEY(GHOST_OR_CHANNEL,GHOST_CLASS)
);

-- ゴースト情報
DROP TABLE DOT_GHOST
CREATE TABLE DOT_GHOST (
  ID          INT           NOT NULL,
  NAME        VARCHAR(64)   NOT NULL,
  VERSION     INT           NOT NULL,
  DIRBASE     VARCHAR(64)   NOT NULL,
  SAKURA_NAME VARCHAR(64)   NOT NULL,
  KERO_NAME   VARCHAR(64)   NOT NULL,
  CONSTRAINT PK_DOT_BASE PRIMARY KEY(ID)
);

-- トークデータ
DROP TABLE DOT_TALK;
CREATE TABLE DOT_TALK (
  ID            INT           NOT NULL,
  GHOST_ID      INT           NOT NULL,
  FILENAME      VARCHAR(128)  NOT NULL,
  LINE          INT           NOT NULL,
  EVENT_NAMES   VARCHAR(255),
  SCRIPT        TEXT,
  NOTE          TEXT,
  CONSTRAINT PK_DOT_TALK PRIMARY KEY(ID),
  UNIQUE INDEX IX_DOT_TALK_1  (GHOST_ID,FILENAME,LINE)
);

-- イベント名情報
DROP TABLE DOT_TALK_EVENT;
CREATE TABLE DOT_TALK_EVENT(
  ID            INT           NOT NULL,
  GHOST_ID      INT           NOT NULL,
  NAME          VARCHAR(64)   NOT NULL,
  CONSTRAINT PK_DOT_TALK_EVENT PRIMARY KEY(ID),
  UNIQUE INDEX IX_DOT_TALK_EVENT_1  (GHOST_ID,NAME)
);

-- トーク・キー関連情報
DROP TABLE DOT_TALK_LINK_EVENT;
CREATE TABLE DOT_TALK_LINK_EVENT (
  GHOST_ID  INT NOT NULL,
  TALK_ID   INT NOT NULL,
  EVENT_ID  INT NOT NULL,
  CONSTRAINT PK_DOT_TALK_LINK_EVENT PRIMARY KEY(GHOST_ID,TALK_ID,EVENT_ID)
);

-- トーク・ボトルログ関連情報
DROP TABLE DOT_TALK_LINK_BOTTLE_LOG;
CREATE TABLE DOT_TALK_LINK_BOTTLE_LOG (
  GHOST_ID        INT         NOT NULL,
  TALK_ID         INT         NOT NULL,
  BOTTLE_LOG_MID  VARCHAR(32) NOT NULL,
  CONSTRAINT PK_DOT_TALK_LINK_BOTTLE_LOG PRIMARY KEY(GHOST_ID,TALK_ID,BOTTLE_LOG_MID)
);
